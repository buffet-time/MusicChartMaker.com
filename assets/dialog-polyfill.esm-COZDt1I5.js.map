{"version":3,"file":"dialog-polyfill.esm-COZDt1I5.js","sources":["../../node_modules/.pnpm/dialog-polyfill@0.5.6/node_modules/dialog-polyfill/dist/dialog-polyfill.esm.js"],"sourcesContent":["// nb. This is for IE10 and lower _only_.\nvar supportCustomEvent = window.CustomEvent;\nif (!supportCustomEvent || typeof supportCustomEvent === 'object') {\n  supportCustomEvent = function CustomEvent(event, x) {\n    x = x || {};\n    var ev = document.createEvent('CustomEvent');\n    ev.initCustomEvent(event, !!x.bubbles, !!x.cancelable, x.detail || null);\n    return ev;\n  };\n  supportCustomEvent.prototype = window.Event.prototype;\n}\n\n/**\n * Dispatches the passed event to both an \"on<type>\" handler as well as via the\n * normal dispatch operation. Does not bubble.\n *\n * @param {!EventTarget} target\n * @param {!Event} event\n * @return {boolean}\n */\nfunction safeDispatchEvent(target, event) {\n  var check = 'on' + event.type.toLowerCase();\n  if (typeof target[check] === 'function') {\n    target[check](event);\n  }\n  return target.dispatchEvent(event);\n}\n\n/**\n * @param {Element} el to check for stacking context\n * @return {boolean} whether this el or its parents creates a stacking context\n */\nfunction createsStackingContext(el) {\n  while (el && el !== document.body) {\n    var s = window.getComputedStyle(el);\n    var invalid = function(k, ok) {\n      return !(s[k] === undefined || s[k] === ok);\n    };\n\n    if (s.opacity < 1 ||\n        invalid('zIndex', 'auto') ||\n        invalid('transform', 'none') ||\n        invalid('mixBlendMode', 'normal') ||\n        invalid('filter', 'none') ||\n        invalid('perspective', 'none') ||\n        s['isolation'] === 'isolate' ||\n        s.position === 'fixed' ||\n        s.webkitOverflowScrolling === 'touch') {\n      return true;\n    }\n    el = el.parentElement;\n  }\n  return false;\n}\n\n/**\n * Finds the nearest <dialog> from the passed element.\n *\n * @param {Element} el to search from\n * @return {HTMLDialogElement} dialog found\n */\nfunction findNearestDialog(el) {\n  while (el) {\n    if (el.localName === 'dialog') {\n      return /** @type {HTMLDialogElement} */ (el);\n    }\n    if (el.parentElement) {\n      el = el.parentElement;\n    } else if (el.parentNode) {\n      el = el.parentNode.host;\n    } else {\n      el = null;\n    }\n  }\n  return null;\n}\n\n/**\n * Blur the specified element, as long as it's not the HTML body element.\n * This works around an IE9/10 bug - blurring the body causes Windows to\n * blur the whole application.\n *\n * @param {Element} el to blur\n */\nfunction safeBlur(el) {\n  // Find the actual focused element when the active element is inside a shadow root\n  while (el && el.shadowRoot && el.shadowRoot.activeElement) {\n    el = el.shadowRoot.activeElement;\n  }\n\n  if (el && el.blur && el !== document.body) {\n    el.blur();\n  }\n}\n\n/**\n * @param {!NodeList} nodeList to search\n * @param {Node} node to find\n * @return {boolean} whether node is inside nodeList\n */\nfunction inNodeList(nodeList, node) {\n  for (var i = 0; i < nodeList.length; ++i) {\n    if (nodeList[i] === node) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * @param {HTMLFormElement} el to check\n * @return {boolean} whether this form has method=\"dialog\"\n */\nfunction isFormMethodDialog(el) {\n  if (!el || !el.hasAttribute('method')) {\n    return false;\n  }\n  return el.getAttribute('method').toLowerCase() === 'dialog';\n}\n\n/**\n * @param {!DocumentFragment|!Element} hostElement\n * @return {?Element}\n */\nfunction findFocusableElementWithin(hostElement) {\n  // Note that this is 'any focusable area'. This list is probably not exhaustive, but the\n  // alternative involves stepping through and trying to focus everything.\n  var opts = ['button', 'input', 'keygen', 'select', 'textarea'];\n  var query = opts.map(function(el) {\n    return el + ':not([disabled])';\n  });\n  // TODO(samthor): tabindex values that are not numeric are not focusable.\n  query.push('[tabindex]:not([disabled]):not([tabindex=\"\"])');  // tabindex != \"\", not disabled\n  var target = hostElement.querySelector(query.join(', '));\n\n  if (!target && 'attachShadow' in Element.prototype) {\n    // If we haven't found a focusable target, see if the host element contains an element\n    // which has a shadowRoot.\n    // Recursively search for the first focusable item in shadow roots.\n    var elems = hostElement.querySelectorAll('*');\n    for (var i = 0; i < elems.length; i++) {\n      if (elems[i].tagName && elems[i].shadowRoot) {\n        target = findFocusableElementWithin(elems[i].shadowRoot);\n        if (target) {\n          break;\n        }\n      }\n    }\n  }\n  return target;\n}\n\n/**\n * Determines if an element is attached to the DOM.\n * @param {Element} element to check\n * @return {boolean} whether the element is in DOM\n */\nfunction isConnected(element) {\n  return element.isConnected || document.body.contains(element);\n}\n\n/**\n * @param {!Event} event\n * @return {?Element}\n */\nfunction findFormSubmitter(event) {\n  if (event.submitter) {\n    return event.submitter;\n  }\n\n  var form = event.target;\n  if (!(form instanceof HTMLFormElement)) {\n    return null;\n  }\n\n  var submitter = dialogPolyfill.formSubmitter;\n  if (!submitter) {\n    var target = event.target;\n    var root = ('getRootNode' in target && target.getRootNode() || document);\n    submitter = root.activeElement;\n  }\n\n  if (!submitter || submitter.form !== form) {\n    return null;\n  }\n  return submitter;\n}\n\n/**\n * @param {!Event} event\n */\nfunction maybeHandleSubmit(event) {\n  if (event.defaultPrevented) {\n    return;\n  }\n  var form = /** @type {!HTMLFormElement} */ (event.target);\n\n  // We'd have a value if we clicked on an imagemap.\n  var value = dialogPolyfill.imagemapUseValue;\n  var submitter = findFormSubmitter(event);\n  if (value === null && submitter) {\n    value = submitter.value;\n  }\n\n  // There should always be a dialog as this handler is added specifically on them, but check just\n  // in case.\n  var dialog = findNearestDialog(form);\n  if (!dialog) {\n    return;\n  }\n\n  // Prefer formmethod on the button.\n  var formmethod = submitter && submitter.getAttribute('formmethod') || form.getAttribute('method');\n  if (formmethod !== 'dialog') {\n    return;\n  }\n  event.preventDefault();\n\n  if (value != null) {\n    // nb. we explicitly check against null/undefined\n    dialog.close(value);\n  } else {\n    dialog.close();\n  }\n}\n\n/**\n * @param {!HTMLDialogElement} dialog to upgrade\n * @constructor\n */\nfunction dialogPolyfillInfo(dialog) {\n  this.dialog_ = dialog;\n  this.replacedStyleTop_ = false;\n  this.openAsModal_ = false;\n\n  // Set a11y role. Browsers that support dialog implicitly know this already.\n  if (!dialog.hasAttribute('role')) {\n    dialog.setAttribute('role', 'dialog');\n  }\n\n  dialog.show = this.show.bind(this);\n  dialog.showModal = this.showModal.bind(this);\n  dialog.close = this.close.bind(this);\n\n  dialog.addEventListener('submit', maybeHandleSubmit, false);\n\n  if (!('returnValue' in dialog)) {\n    dialog.returnValue = '';\n  }\n\n  if ('MutationObserver' in window) {\n    var mo = new MutationObserver(this.maybeHideModal.bind(this));\n    mo.observe(dialog, {attributes: true, attributeFilter: ['open']});\n  } else {\n    // IE10 and below support. Note that DOMNodeRemoved etc fire _before_ removal. They also\n    // seem to fire even if the element was removed as part of a parent removal. Use the removed\n    // events to force downgrade (useful if removed/immediately added).\n    var removed = false;\n    var cb = function() {\n      removed ? this.downgradeModal() : this.maybeHideModal();\n      removed = false;\n    }.bind(this);\n    var timeout;\n    var delayModel = function(ev) {\n      if (ev.target !== dialog) { return; }  // not for a child element\n      var cand = 'DOMNodeRemoved';\n      removed |= (ev.type.substr(0, cand.length) === cand);\n      window.clearTimeout(timeout);\n      timeout = window.setTimeout(cb, 0);\n    };\n    ['DOMAttrModified', 'DOMNodeRemoved', 'DOMNodeRemovedFromDocument'].forEach(function(name) {\n      dialog.addEventListener(name, delayModel);\n    });\n  }\n  // Note that the DOM is observed inside DialogManager while any dialog\n  // is being displayed as a modal, to catch modal removal from the DOM.\n\n  Object.defineProperty(dialog, 'open', {\n    set: this.setOpen.bind(this),\n    get: dialog.hasAttribute.bind(dialog, 'open')\n  });\n\n  this.backdrop_ = document.createElement('div');\n  this.backdrop_.className = 'backdrop';\n  this.backdrop_.addEventListener('mouseup'  , this.backdropMouseEvent_.bind(this));\n  this.backdrop_.addEventListener('mousedown', this.backdropMouseEvent_.bind(this));\n  this.backdrop_.addEventListener('click'    , this.backdropMouseEvent_.bind(this));\n}\n\ndialogPolyfillInfo.prototype = /** @type {HTMLDialogElement.prototype} */ ({\n\n  get dialog() {\n    return this.dialog_;\n  },\n\n  /**\n   * Maybe remove this dialog from the modal top layer. This is called when\n   * a modal dialog may no longer be tenable, e.g., when the dialog is no\n   * longer open or is no longer part of the DOM.\n   */\n  maybeHideModal: function() {\n    if (this.dialog_.hasAttribute('open') && isConnected(this.dialog_)) { return; }\n    this.downgradeModal();\n  },\n\n  /**\n   * Remove this dialog from the modal top layer, leaving it as a non-modal.\n   */\n  downgradeModal: function() {\n    if (!this.openAsModal_) { return; }\n    this.openAsModal_ = false;\n    this.dialog_.style.zIndex = '';\n\n    // This won't match the native <dialog> exactly because if the user set top on a centered\n    // polyfill dialog, that top gets thrown away when the dialog is closed. Not sure it's\n    // possible to polyfill this perfectly.\n    if (this.replacedStyleTop_) {\n      this.dialog_.style.top = '';\n      this.replacedStyleTop_ = false;\n    }\n\n    // Clear the backdrop and remove from the manager.\n    this.backdrop_.parentNode && this.backdrop_.parentNode.removeChild(this.backdrop_);\n    dialogPolyfill.dm.removeDialog(this);\n  },\n\n  /**\n   * @param {boolean} value whether to open or close this dialog\n   */\n  setOpen: function(value) {\n    if (value) {\n      this.dialog_.hasAttribute('open') || this.dialog_.setAttribute('open', '');\n    } else {\n      this.dialog_.removeAttribute('open');\n      this.maybeHideModal();  // nb. redundant with MutationObserver\n    }\n  },\n\n  /**\n   * Handles mouse events ('mouseup', 'mousedown', 'click') on the fake .backdrop element, redirecting them as if\n   * they were on the dialog itself.\n   *\n   * @param {!Event} e to redirect\n   */\n  backdropMouseEvent_: function(e) {\n    if (!this.dialog_.hasAttribute('tabindex')) {\n      // Clicking on the backdrop should move the implicit cursor, even if dialog cannot be\n      // focused. Create a fake thing to focus on. If the backdrop was _before_ the dialog, this\n      // would not be needed - clicks would move the implicit cursor there.\n      var fake = document.createElement('div');\n      this.dialog_.insertBefore(fake, this.dialog_.firstChild);\n      fake.tabIndex = -1;\n      fake.focus();\n      this.dialog_.removeChild(fake);\n    } else {\n      this.dialog_.focus();\n    }\n\n    var redirectedEvent = document.createEvent('MouseEvents');\n    redirectedEvent.initMouseEvent(e.type, e.bubbles, e.cancelable, window,\n        e.detail, e.screenX, e.screenY, e.clientX, e.clientY, e.ctrlKey,\n        e.altKey, e.shiftKey, e.metaKey, e.button, e.relatedTarget);\n    this.dialog_.dispatchEvent(redirectedEvent);\n    e.stopPropagation();\n  },\n\n  /**\n   * Focuses on the first focusable element within the dialog. This will always blur the current\n   * focus, even if nothing within the dialog is found.\n   */\n  focus_: function() {\n    // Find element with `autofocus` attribute, or fall back to the first form/tabindex control.\n    var target = this.dialog_.querySelector('[autofocus]:not([disabled])');\n    if (!target && this.dialog_.tabIndex >= 0) {\n      target = this.dialog_;\n    }\n    if (!target) {\n      target = findFocusableElementWithin(this.dialog_);\n    }\n    safeBlur(document.activeElement);\n    target && target.focus();\n  },\n\n  /**\n   * Sets the zIndex for the backdrop and dialog.\n   *\n   * @param {number} dialogZ\n   * @param {number} backdropZ\n   */\n  updateZIndex: function(dialogZ, backdropZ) {\n    if (dialogZ < backdropZ) {\n      throw new Error('dialogZ should never be < backdropZ');\n    }\n    this.dialog_.style.zIndex = dialogZ;\n    this.backdrop_.style.zIndex = backdropZ;\n  },\n\n  /**\n   * Shows the dialog. If the dialog is already open, this does nothing.\n   */\n  show: function() {\n    if (!this.dialog_.open) {\n      this.setOpen(true);\n      this.focus_();\n    }\n  },\n\n  /**\n   * Show this dialog modally.\n   */\n  showModal: function() {\n    if (this.dialog_.hasAttribute('open')) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: The element is already open, and therefore cannot be opened modally.');\n    }\n    if (!isConnected(this.dialog_)) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: The element is not in a Document.');\n    }\n    if (!dialogPolyfill.dm.pushDialog(this)) {\n      throw new Error('Failed to execute \\'showModal\\' on dialog: There are too many open modal dialogs.');\n    }\n\n    if (createsStackingContext(this.dialog_.parentElement)) {\n      console.warn('A dialog is being shown inside a stacking context. ' +\n          'This may cause it to be unusable. For more information, see this link: ' +\n          'https://github.com/GoogleChrome/dialog-polyfill/#stacking-context');\n    }\n\n    this.setOpen(true);\n    this.openAsModal_ = true;\n\n    // Optionally center vertically, relative to the current viewport.\n    if (dialogPolyfill.needsCentering(this.dialog_)) {\n      dialogPolyfill.reposition(this.dialog_);\n      this.replacedStyleTop_ = true;\n    } else {\n      this.replacedStyleTop_ = false;\n    }\n\n    // Insert backdrop.\n    this.dialog_.parentNode.insertBefore(this.backdrop_, this.dialog_.nextSibling);\n\n    // Focus on whatever inside the dialog.\n    this.focus_();\n  },\n\n  /**\n   * Closes this HTMLDialogElement. This is optional vs clearing the open\n   * attribute, however this fires a 'close' event.\n   *\n   * @param {string=} opt_returnValue to use as the returnValue\n   */\n  close: function(opt_returnValue) {\n    if (!this.dialog_.hasAttribute('open')) {\n      throw new Error('Failed to execute \\'close\\' on dialog: The element does not have an \\'open\\' attribute, and therefore cannot be closed.');\n    }\n    this.setOpen(false);\n\n    // Leave returnValue untouched in case it was set directly on the element\n    if (opt_returnValue !== undefined) {\n      this.dialog_.returnValue = opt_returnValue;\n    }\n\n    // Triggering \"close\" event for any attached listeners on the <dialog>.\n    var closeEvent = new supportCustomEvent('close', {\n      bubbles: false,\n      cancelable: false\n    });\n    safeDispatchEvent(this.dialog_, closeEvent);\n  }\n\n});\n\nvar dialogPolyfill = {};\n\ndialogPolyfill.reposition = function(element) {\n  var scrollTop = document.body.scrollTop || document.documentElement.scrollTop;\n  var topValue = scrollTop + (window.innerHeight - element.offsetHeight) / 2;\n  element.style.top = Math.max(scrollTop, topValue) + 'px';\n};\n\ndialogPolyfill.isInlinePositionSetByStylesheet = function(element) {\n  for (var i = 0; i < document.styleSheets.length; ++i) {\n    var styleSheet = document.styleSheets[i];\n    var cssRules = null;\n    // Some browsers throw on cssRules.\n    try {\n      cssRules = styleSheet.cssRules;\n    } catch (e) {}\n    if (!cssRules) { continue; }\n    for (var j = 0; j < cssRules.length; ++j) {\n      var rule = cssRules[j];\n      var selectedNodes = null;\n      // Ignore errors on invalid selector texts.\n      try {\n        selectedNodes = document.querySelectorAll(rule.selectorText);\n      } catch(e) {}\n      if (!selectedNodes || !inNodeList(selectedNodes, element)) {\n        continue;\n      }\n      var cssTop = rule.style.getPropertyValue('top');\n      var cssBottom = rule.style.getPropertyValue('bottom');\n      if ((cssTop && cssTop !== 'auto') || (cssBottom && cssBottom !== 'auto')) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ndialogPolyfill.needsCentering = function(dialog) {\n  var computedStyle = window.getComputedStyle(dialog);\n  if (computedStyle.position !== 'absolute') {\n    return false;\n  }\n\n  // We must determine whether the top/bottom specified value is non-auto.  In\n  // WebKit/Blink, checking computedStyle.top == 'auto' is sufficient, but\n  // Firefox returns the used value. So we do this crazy thing instead: check\n  // the inline style and then go through CSS rules.\n  if ((dialog.style.top !== 'auto' && dialog.style.top !== '') ||\n      (dialog.style.bottom !== 'auto' && dialog.style.bottom !== '')) {\n    return false;\n  }\n  return !dialogPolyfill.isInlinePositionSetByStylesheet(dialog);\n};\n\n/**\n * @param {!Element} element to force upgrade\n */\ndialogPolyfill.forceRegisterDialog = function(element) {\n  if (window.HTMLDialogElement || element.showModal) {\n    console.warn('This browser already supports <dialog>, the polyfill ' +\n        'may not work correctly', element);\n  }\n  if (element.localName !== 'dialog') {\n    throw new Error('Failed to register dialog: The element is not a dialog.');\n  }\n  new dialogPolyfillInfo(/** @type {!HTMLDialogElement} */ (element));\n};\n\n/**\n * @param {!Element} element to upgrade, if necessary\n */\ndialogPolyfill.registerDialog = function(element) {\n  if (!element.showModal) {\n    dialogPolyfill.forceRegisterDialog(element);\n  }\n};\n\n/**\n * @constructor\n */\ndialogPolyfill.DialogManager = function() {\n  /** @type {!Array<!dialogPolyfillInfo>} */\n  this.pendingDialogStack = [];\n\n  var checkDOM = this.checkDOM_.bind(this);\n\n  // The overlay is used to simulate how a modal dialog blocks the document.\n  // The blocking dialog is positioned on top of the overlay, and the rest of\n  // the dialogs on the pending dialog stack are positioned below it. In the\n  // actual implementation, the modal dialog stacking is controlled by the\n  // top layer, where z-index has no effect.\n  this.overlay = document.createElement('div');\n  this.overlay.className = '_dialog_overlay';\n  this.overlay.addEventListener('click', function(e) {\n    this.forwardTab_ = undefined;\n    e.stopPropagation();\n    checkDOM([]);  // sanity-check DOM\n  }.bind(this));\n\n  this.handleKey_ = this.handleKey_.bind(this);\n  this.handleFocus_ = this.handleFocus_.bind(this);\n\n  this.zIndexLow_ = 100000;\n  this.zIndexHigh_ = 100000 + 150;\n\n  this.forwardTab_ = undefined;\n\n  if ('MutationObserver' in window) {\n    this.mo_ = new MutationObserver(function(records) {\n      var removed = [];\n      records.forEach(function(rec) {\n        for (var i = 0, c; c = rec.removedNodes[i]; ++i) {\n          if (!(c instanceof Element)) {\n            continue;\n          } else if (c.localName === 'dialog') {\n            removed.push(c);\n          }\n          removed = removed.concat(c.querySelectorAll('dialog'));\n        }\n      });\n      removed.length && checkDOM(removed);\n    });\n  }\n};\n\n/**\n * Called on the first modal dialog being shown. Adds the overlay and related\n * handlers.\n */\ndialogPolyfill.DialogManager.prototype.blockDocument = function() {\n  document.documentElement.addEventListener('focus', this.handleFocus_, true);\n  document.addEventListener('keydown', this.handleKey_);\n  this.mo_ && this.mo_.observe(document, {childList: true, subtree: true});\n};\n\n/**\n * Called on the first modal dialog being removed, i.e., when no more modal\n * dialogs are visible.\n */\ndialogPolyfill.DialogManager.prototype.unblockDocument = function() {\n  document.documentElement.removeEventListener('focus', this.handleFocus_, true);\n  document.removeEventListener('keydown', this.handleKey_);\n  this.mo_ && this.mo_.disconnect();\n};\n\n/**\n * Updates the stacking of all known dialogs.\n */\ndialogPolyfill.DialogManager.prototype.updateStacking = function() {\n  var zIndex = this.zIndexHigh_;\n\n  for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n    dpi.updateZIndex(--zIndex, --zIndex);\n    if (i === 0) {\n      this.overlay.style.zIndex = --zIndex;\n    }\n  }\n\n  // Make the overlay a sibling of the dialog itself.\n  var last = this.pendingDialogStack[0];\n  if (last) {\n    var p = last.dialog.parentNode || document.body;\n    p.appendChild(this.overlay);\n  } else if (this.overlay.parentNode) {\n    this.overlay.parentNode.removeChild(this.overlay);\n  }\n};\n\n/**\n * @param {Element} candidate to check if contained or is the top-most modal dialog\n * @return {boolean} whether candidate is contained in top dialog\n */\ndialogPolyfill.DialogManager.prototype.containedByTopDialog_ = function(candidate) {\n  while (candidate = findNearestDialog(candidate)) {\n    for (var i = 0, dpi; dpi = this.pendingDialogStack[i]; ++i) {\n      if (dpi.dialog === candidate) {\n        return i === 0;  // only valid if top-most\n      }\n    }\n    candidate = candidate.parentElement;\n  }\n  return false;\n};\n\ndialogPolyfill.DialogManager.prototype.handleFocus_ = function(event) {\n  var target = event.composedPath ? event.composedPath()[0] : event.target;\n\n  if (this.containedByTopDialog_(target)) { return; }\n\n  if (document.activeElement === document.documentElement) { return; }\n\n  event.preventDefault();\n  event.stopPropagation();\n  safeBlur(/** @type {Element} */ (target));\n\n  if (this.forwardTab_ === undefined) { return; }  // move focus only from a tab key\n\n  var dpi = this.pendingDialogStack[0];\n  var dialog = dpi.dialog;\n  var position = dialog.compareDocumentPosition(target);\n  if (position & Node.DOCUMENT_POSITION_PRECEDING) {\n    if (this.forwardTab_) {\n      // forward\n      dpi.focus_();\n    } else if (target !== document.documentElement) {\n      // backwards if we're not already focused on <html>\n      document.documentElement.focus();\n    }\n  }\n\n  return false;\n};\n\ndialogPolyfill.DialogManager.prototype.handleKey_ = function(event) {\n  this.forwardTab_ = undefined;\n  if (event.keyCode === 27) {\n    event.preventDefault();\n    event.stopPropagation();\n    var cancelEvent = new supportCustomEvent('cancel', {\n      bubbles: false,\n      cancelable: true\n    });\n    var dpi = this.pendingDialogStack[0];\n    if (dpi && safeDispatchEvent(dpi.dialog, cancelEvent)) {\n      dpi.dialog.close();\n    }\n  } else if (event.keyCode === 9) {\n    this.forwardTab_ = !event.shiftKey;\n  }\n};\n\n/**\n * Finds and downgrades any known modal dialogs that are no longer displayed. Dialogs that are\n * removed and immediately readded don't stay modal, they become normal.\n *\n * @param {!Array<!HTMLDialogElement>} removed that have definitely been removed\n */\ndialogPolyfill.DialogManager.prototype.checkDOM_ = function(removed) {\n  // This operates on a clone because it may cause it to change. Each change also calls\n  // updateStacking, which only actually needs to happen once. But who removes many modal dialogs\n  // at a time?!\n  var clone = this.pendingDialogStack.slice();\n  clone.forEach(function(dpi) {\n    if (removed.indexOf(dpi.dialog) !== -1) {\n      dpi.downgradeModal();\n    } else {\n      dpi.maybeHideModal();\n    }\n  });\n};\n\n/**\n * @param {!dialogPolyfillInfo} dpi\n * @return {boolean} whether the dialog was allowed\n */\ndialogPolyfill.DialogManager.prototype.pushDialog = function(dpi) {\n  var allowed = (this.zIndexHigh_ - this.zIndexLow_) / 2 - 1;\n  if (this.pendingDialogStack.length >= allowed) {\n    return false;\n  }\n  if (this.pendingDialogStack.unshift(dpi) === 1) {\n    this.blockDocument();\n  }\n  this.updateStacking();\n  return true;\n};\n\n/**\n * @param {!dialogPolyfillInfo} dpi\n */\ndialogPolyfill.DialogManager.prototype.removeDialog = function(dpi) {\n  var index = this.pendingDialogStack.indexOf(dpi);\n  if (index === -1) { return; }\n\n  this.pendingDialogStack.splice(index, 1);\n  if (this.pendingDialogStack.length === 0) {\n    this.unblockDocument();\n  }\n  this.updateStacking();\n};\n\ndialogPolyfill.dm = new dialogPolyfill.DialogManager();\ndialogPolyfill.formSubmitter = null;\ndialogPolyfill.imagemapUseValue = null;\n\n/**\n * Installs global handlers, such as click listers and native method overrides. These are needed\n * even if a no dialog is registered, as they deal with <form method=\"dialog\">.\n */\nif (window.HTMLDialogElement === undefined) {\n\n  /**\n   * If HTMLFormElement translates method=\"DIALOG\" into 'get', then replace the descriptor with\n   * one that returns the correct value.\n   */\n  var testForm = document.createElement('form');\n  testForm.setAttribute('method', 'dialog');\n  if (testForm.method !== 'dialog') {\n    var methodDescriptor = Object.getOwnPropertyDescriptor(HTMLFormElement.prototype, 'method');\n    if (methodDescriptor) {\n      // nb. Some older iOS and older PhantomJS fail to return the descriptor. Don't do anything\n      // and don't bother to update the element.\n      var realGet = methodDescriptor.get;\n      methodDescriptor.get = function() {\n        if (isFormMethodDialog(this)) {\n          return 'dialog';\n        }\n        return realGet.call(this);\n      };\n      var realSet = methodDescriptor.set;\n      /** @this {HTMLElement} */\n      methodDescriptor.set = function(v) {\n        if (typeof v === 'string' && v.toLowerCase() === 'dialog') {\n          return this.setAttribute('method', v);\n        }\n        return realSet.call(this, v);\n      };\n      Object.defineProperty(HTMLFormElement.prototype, 'method', methodDescriptor);\n    }\n  }\n\n  /**\n   * Global 'click' handler, to capture the <input type=\"submit\"> or <button> element which has\n   * submitted a <form method=\"dialog\">. Needed as Safari and others don't report this inside\n   * document.activeElement.\n   */\n  document.addEventListener('click', function(ev) {\n    dialogPolyfill.formSubmitter = null;\n    dialogPolyfill.imagemapUseValue = null;\n    if (ev.defaultPrevented) { return; }  // e.g. a submit which prevents default submission\n\n    var target = /** @type {Element} */ (ev.target);\n    if ('composedPath' in ev) {\n      var path = ev.composedPath();\n      target = path.shift() || target;\n    }\n    if (!target || !isFormMethodDialog(target.form)) { return; }\n\n    var valid = (target.type === 'submit' && ['button', 'input'].indexOf(target.localName) > -1);\n    if (!valid) {\n      if (!(target.localName === 'input' && target.type === 'image')) { return; }\n      // this is a <input type=\"image\">, which can submit forms\n      dialogPolyfill.imagemapUseValue = ev.offsetX + ',' + ev.offsetY;\n    }\n\n    var dialog = findNearestDialog(target);\n    if (!dialog) { return; }\n\n    dialogPolyfill.formSubmitter = target;\n\n  }, false);\n\n  /**\n   * Global 'submit' handler. This handles submits of `method=\"dialog\"` which are invalid, i.e.,\n   * outside a dialog. They get prevented.\n   */\n  document.addEventListener('submit', function(ev) {\n    var form = ev.target;\n    var dialog = findNearestDialog(form);\n    if (dialog) {\n      return;  // ignore, handle there\n    }\n\n    var submitter = findFormSubmitter(ev);\n    var formmethod = submitter && submitter.getAttribute('formmethod') || form.getAttribute('method');\n    if (formmethod === 'dialog') {\n      ev.preventDefault();\n    }\n  });\n\n  /**\n   * Replace the native HTMLFormElement.submit() method, as it won't fire the\n   * submit event and give us a chance to respond.\n   */\n  var nativeFormSubmit = HTMLFormElement.prototype.submit;\n  var replacementFormSubmit = function () {\n    if (!isFormMethodDialog(this)) {\n      return nativeFormSubmit.call(this);\n    }\n    var dialog = findNearestDialog(this);\n    dialog && dialog.close();\n  };\n  HTMLFormElement.prototype.submit = replacementFormSubmit;\n}\n\nexport default dialogPolyfill;\n"],"names":["supportCustomEvent","window","CustomEvent","safeDispatchEvent","target","event","check","type","toLowerCase","dispatchEvent","findNearestDialog","el","localName","parentElement","parentNode","host","safeBlur","shadowRoot","activeElement","blur","document","body","isFormMethodDialog","hasAttribute","getAttribute","isConnected","element","contains","findFormSubmitter","submitter","form","HTMLFormElement","dialogPolyfill","formSubmitter","getRootNode","maybeHandleSubmit","defaultPrevented","value","imagemapUseValue","dialog","preventDefault","close","dialogPolyfillInfo","dialog_","replacedStyleTop_","openAsModal_","setAttribute","show","bind","showModal","addEventListener","returnValue","mo","MutationObserver","maybeHideModal","observe","attributes","attributeFilter","timeout","removed","cb","downgradeModal","delayModel","ev","cand","substr","length","clearTimeout","setTimeout","forEach","name","Object","defineProperty","set","setOpen","get","backdrop_","createElement","className","backdropMouseEvent_","x","createEvent","initCustomEvent","bubbles","cancelable","detail","prototype","Event","style","zIndex","top","removeChild","dm","removeDialog","removeAttribute","e","focus","fake","insertBefore","firstChild","tabIndex","redirectedEvent","initMouseEvent","screenX","screenY","clientX","clientY","ctrlKey","altKey","shiftKey","metaKey","button","relatedTarget","stopPropagation","focus_","querySelector","findFocusableElementWithin","hostElement","query","opts","map","push","join","Element","elems","querySelectorAll","i","tagName","updateZIndex","dialogZ","backdropZ","Error","open","pushDialog","createsStackingContext","s","getComputedStyle","invalid","k","ok","opacity","position","webkitOverflowScrolling","console","warn","needsCentering","reposition","nextSibling","opt_returnValue","undefined","closeEvent","scrollTop","documentElement","topValue","innerHeight","offsetHeight","Math","max","isInlinePositionSetByStylesheet","styleSheets","styleSheet","cssRules","j","rule","selectedNodes","selectorText","inNodeList","nodeList","node","cssTop","getPropertyValue","cssBottom","computedStyle","bottom","forceRegisterDialog","HTMLDialogElement","registerDialog","DialogManager","pendingDialogStack","checkDOM","checkDOM_","overlay","forwardTab_","handleKey_","handleFocus_","zIndexLow_","zIndexHigh_","mo_","records","rec","c","removedNodes","concat","blockDocument","childList","subtree","unblockDocument","removeEventListener","disconnect","updateStacking","dpi","last","appendChild","containedByTopDialog_","candidate","composedPath","compareDocumentPosition","Node","DOCUMENT_POSITION_PRECEDING","keyCode","cancelEvent","clone","slice","indexOf","allowed","unshift","index","splice","testForm","method","methodDescriptor","getOwnPropertyDescriptor","realGet","n","call","realSet","v","path","shift","t","offsetX","offsetY","nativeFormSubmit","submit"],"mappings":"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","x_google_ignoreList":[0]}